const e=document.getElementById("optimize-btn"),t=document.getElementById("user-prompt"),n=document.getElementById("result-container"),o=document.getElementById("result-content"),s=document.getElementById("copy-result"),a=document.getElementById("loading"),c=document.getElementById("error"),r=document.getElementById("success"),i=document.getElementById("api-key"),d=document.getElementById("save-settings"),l=document.getElementById("test-api"),u=document.getElementById("api-status"),m=document.getElementById("model-selection"),g=document.getElementById("context-style");document.addEventListener("DOMContentLoaded",async()=>{await p(),await h()}),window.insertTemplate=e=>{const n={creative:"Create a [type of content] that [specific goal]. The output should be [desired characteristics] and include [specific elements].",analysis:"Analyze [data/topic] and provide insights about [specific aspects]. Focus on [key areas] and present findings in [desired format].",writing:"Write a [type of content] about [topic] for [audience]. The tone should be [tone] and include [specific requirements].",coding:"Write [language] code that [functionality]. The code should [requirements] and follow [standards/patterns]."};t.value=n[e]||"",t.focus()},d.addEventListener("click",async()=>{const e={apiKey:i.value.trim(),model:m.value,contextStyle:g.value};if(!e.apiKey)return void y("Please enter an API key","error");try{const t=await chrome.runtime.sendMessage({action:"saveSettings",data:e});t.success?(y("Settings saved successfully!","success"),await h()):y("Failed to save settings","error")}catch(e){y("Failed to save settings: "+e.message,"error")}}),l.addEventListener("click",async()=>{const e=i.value.trim();if(!e)return void y("Please enter an API key first","error");l.disabled=!0,l.textContent="Testing...";try{const t=await chrome.runtime.sendMessage({action:"optimizePrompt",data:{userPrompt:"Hello",apiKey:e,model:"claude-3-5-haiku-20241022",contextStyle:"quick"}});t.success?y("API connection successful!","success"):y("API test failed: "+t.error,"error")}catch(e){y("API test failed: "+e.message,"error")}finally{l.disabled=!1,l.textContent="Test API Connection"}}),e.addEventListener("click",async()=>{const s=t.value.trim();if(!s)return void y("Please enter a prompt to optimize","error");const c=await chrome.runtime.sendMessage({action:"getSettings"});if(!c.success||!c.settings.apiKey)return void y("Please configure your API key in settings","error");const r=c.settings;try{e.disabled=!0,e.textContent="Optimizing...",a.style.display="block",f();const t=await chrome.runtime.sendMessage({action:"optimizePrompt",data:{userPrompt:s,apiKey:r.apiKey,model:r.model||"claude-3-5-sonnet-20241022",contextStyle:r.contextStyle||"comprehensive"}});t.success?v(t.optimizedPrompt):y("Optimization failed: "+t.error,"error")}catch(t){y("Optimization failed: "+t.message,"error")}finally{e.disabled=!1,e.textContent="Optimize Prompt",a.style.display="none"}}),s.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(o.textContent);const e=s.textContent;s.textContent="Copied!",s.style.background="#059669",setTimeout(()=>{s.textContent=e,s.style.background="#10b981"},2e3)}catch(e){y("Failed to copy to clipboard","error")}}),document.addEventListener("keydown",e=>{(e.ctrlKey||e.metaKey)&&"Enter"===e.key&&(e.preventDefault(),e.disabled||e.click()),"Escape"===e.key&&f()});async function p(){try{const e=await chrome.runtime.sendMessage({action:"getSettings"});if(e.success){const t=e.settings;t.apiKey&&(i.value=t.apiKey),t.model&&(m.value=t.model),t.contextStyle&&(g.value=t.contextStyle)}}catch(e){console.error("Failed to load settings:",e)}}async function h(){const e=await chrome.runtime.sendMessage({action:"getSettings"});return e.success&&e.settings.apiKey?(u.textContent="✅ API key configured",u.className="api-status valid",u.style.display="block",!0):(u.textContent="⚠️ API key not configured",u.className="api-status invalid",u.style.display="block",!1)}function v(e){o.textContent=e,n.style.display="block",n.scrollIntoView({behavior:"smooth"})}function y(e,t){f();const n=document.querySelector('.tab-content.active');let o;if(n&&n.id==='settings-tab'){o="error"===t?document.getElementById("settings-error"):document.getElementById("settings-success")}else{o="error"===t?c:r}o.textContent=e,o.style.display="block","success"===t&&setTimeout(()=>{o.style.display="none"},3e3)}function f(){c.style.display="none",r.style.display="none";const e=document.getElementById("settings-error"),t=document.getElementById("settings-success");e&&(e.style.display="none"),t&&(t.style.display="none")}function switchTab(e){document.querySelectorAll('.tab-content').forEach(e=>{e.classList.remove('active')}),document.querySelectorAll('.tab').forEach(e=>{e.classList.remove('active')});const t=document.getElementById(e+'-tab');t&&t.classList.add('active');const n=document.querySelector(`[data-tab="${e}"]`);n&&n.classList.add('active'),'settings'===e&&setTimeout(()=>{'function'==typeof h&&h()},100)}document.getElementById('optimize-tab-btn').addEventListener('click',()=>switchTab('optimize'));document.getElementById('settings-tab-btn').addEventListener('click',()=>switchTab('settings'));document.querySelectorAll('.quick-btn').forEach(e=>{e.addEventListener('click',()=>{const t=e.dataset.template;t&&window.insertTemplate&&window.insertTemplate(t)})})